{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\abouh\\\\OneDrive\\\\Desktop\\\\sampleApp\\\\pages\\\\_app.js\";\nimport App from 'next/app';\nimport './app.css';\nimport Head from 'next/head';\nimport { AppProvider } from '@shopify/polaris';\nimport { Provider } from '@shopify/app-bridge-react';\nimport '@shopify/polaris/dist/styles.css';\nimport translations from '@shopify/polaris/locales/en.json';\nimport React, { useState } from 'react';\nimport Cookies from 'js-cookie';\nimport db from './firebase.js';\nimport 'firebase/firestore';\nimport \"firebase/auth\"; //The name of the collection of the cooler database\n//Kept globally so it's easily changeable\n\nconst databaseName = 'cooler-tracking'; //TODO update customer tags -- increase by one\n//Update cooler with given id to out with the given order number\n\nasync function updateOutboundCooler(order, cooler) {\n  let res = await db.collection(databaseName).doc(cooler).set({\n    status: order\n  }); //Get customer id from order\n  //Increment number in coolers tag of customer\n} //TODO update customer tags -- decrease by one\n//Update the given cooler id to inventory\n\n\nasync function updateInboundCooler(cooler) {\n  //Get order number assosciated with cooler\n  //Get customer id from order\n  let res = await db.collection(databaseName).doc(cooler).set({\n    status: 'inventory'\n  }); //Decrease number in coolers tag of customer\n} //Instantiates the page to assosciate the order to cooler\n\n\nfunction OutboundPage(props) {\n  //States to represent the current value of the order and the cooler\n  const {\n    0: orderNum,\n    1: setOrder\n  } = useState(\"NA\");\n  const {\n    0: coolerNum,\n    1: setCooler\n  } = useState(\"NA\"); //States to represent the value held within the input fields\n\n  const {\n    0: inOValue,\n    1: setInOValue\n  } = useState('');\n  const {\n    0: inCValue,\n    1: setInCValue\n  } = useState(''); //State to represent the error messages if needed (if none, then keep empty)\n\n  const {\n    0: errorMsg,\n    1: setError\n  } = useState(''); //Handles the changes in the order input field\n  //Only stores new order if it is of correct length\n\n  const handleOChange = e => {\n    let input = e.target.value;\n\n    if (input.length === props.orderLength) {\n      setOrder(input);\n      setInOValue('');\n    } else {\n      setInOValue(input);\n    }\n  }; //Handles the changges to the cooler input field\n  //Only stores new cooler if it is of correct length\n\n\n  const handleCChange = e => {\n    let input = e.target.value;\n\n    if (input.length == props.coolerLength) {\n      setCooler(input);\n      setInCValue('');\n    } else {\n      setInCValue(input);\n    }\n  }; //Handles the submit button's functionality\n  //Updates the outgoing cooler then resets the states of the cooler and order\n  //Prints error if either are NA\n\n\n  const handleSubmit = () => {\n    if (orderNum !== 'NA' && coolerNum !== 'NA') {\n      updateOutboundCooler(orderNum, coolerNum);\n      setOrder('NA');\n      setCooler('NA');\n      setError('');\n    } else {\n      setError('Order Number and Cooler Number must be selected');\n    }\n  }; //Prints the outgoing page\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"inOutPage\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"fieldDiv\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"scanLabel\",\n        children: [\"Order Number:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          value: inOValue,\n          onChange: handleOChange,\n          className: \"inputBox\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"scanLabel\",\n        children: [\"Cooler Number:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          value: inCValue,\n          onChange: handleCChange,\n          className: \"inputBox\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"numbersDiv\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          color: \"red\"\n        },\n        children: errorMsg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Current Order Number: \", orderNum]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Current Cooler Number: \", coolerNum]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n} //Instantiates the page to mark the cooler as picked up\n\n\nfunction InboundPage(props) {\n  //State that represents the value in the input field\n  const {\n    0: inCValue,\n    1: setInCValue\n  } = useState(''); //Handles when cooler field has been changed\n  //-- only has an effect if the cooler id's length is the desired one\n\n  const handleChange = e => {\n    let input = e.target.value;\n\n    if (input.length == props.coolerLength) {\n      setInCValue('');\n      updateInboundCooler(input);\n    } else {\n      setInCValue(input);\n    }\n  }; //Prints this page\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"pageTitle\",\n      children: \"Cooler Scanning\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"inOutPage\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"scanLabel\",\n        children: [\"Cooler Number:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          value: inCValue,\n          onChange: handleChange,\n          className: \"inputBox\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 5\n  }, this);\n}\n\nclass MyApp extends App {\n  constructor(props) {\n    super(props);\n    this.state = {\n      inbound: false,\n      outbound: true\n    };\n    this.swapBoxes = this.swapBoxes.bind(this);\n  } //Swaps which page is being shown, inbound or outbound, based on checkboxes\n\n\n  swapBoxes() {\n    var newOut = !this.state.outbound;\n    this.setState({\n      outbound: newOut,\n      inbound: !newOut\n    });\n  }\n\n  render() {\n    const {\n      Component,\n      pageProps\n    } = this.props;\n    const config = {\n      apiKey: API_KEY,\n      shopOrigin: Cookies.get('shopOrigin'),\n      forcedRedirect: true\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"checkboxLocation\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"checkBoxInsruction\",\n          children: \"Please select scan type:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"checkboxForm\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"checkBox\",\n            children: [\"Assigning Cooler\", /*#__PURE__*/_jsxDEV(\"input\", {\n              name: \"outCool\",\n              type: \"checkbox\",\n              checked: this.state.outbound,\n              onChange: this.swapBoxes\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"checkBox\",\n            children: [\"Inbound Cooler\", /*#__PURE__*/_jsxDEV(\"input\", {\n              name: \"inCool\",\n              type: \"checkbox\",\n              checked: this.state.inbound,\n              onChange: this.swapBoxes\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), this.state.outbound ? /*#__PURE__*/_jsxDEV(OutboundPage, {\n        orderLength: 7,\n        coolerLength: 4\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(InboundPage, {\n        coolerLength: 4\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default MyApp;","map":{"version":3,"sources":["C:/Users/abouh/OneDrive/Desktop/sampleApp/pages/_app.js"],"names":["App","Head","AppProvider","Provider","translations","React","useState","Cookies","db","databaseName","updateOutboundCooler","order","cooler","res","collection","doc","set","status","updateInboundCooler","OutboundPage","props","orderNum","setOrder","coolerNum","setCooler","inOValue","setInOValue","inCValue","setInCValue","errorMsg","setError","handleOChange","e","input","target","value","length","orderLength","handleCChange","coolerLength","handleSubmit","color","InboundPage","handleChange","MyApp","constructor","state","inbound","outbound","swapBoxes","bind","newOut","setState","render","Component","pageProps","config","apiKey","API_KEY","shopOrigin","get","forcedRedirect"],"mappings":"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","sourcesContent":["import App from 'next/app';\r\nimport './app.css';\r\nimport Head from 'next/head';\r\nimport { AppProvider } from '@shopify/polaris';\r\nimport { Provider } from '@shopify/app-bridge-react'\r\nimport '@shopify/polaris/dist/styles.css';\r\nimport translations from '@shopify/polaris/locales/en.json';\r\nimport React, { useState } from 'react';\r\nimport Cookies from 'js-cookie';\r\nimport db from './firebase.js';\r\nimport 'firebase/firestore'\r\nimport \"firebase/auth\";\r\n\r\n\r\n//The name of the collection of the cooler database\r\n//Kept globally so it's easily changeable\r\nconst databaseName = 'cooler-tracking';\r\n\r\n//TODO update customer tags -- increase by one\r\n//Update cooler with given id to out with the given order number\r\nasync function updateOutboundCooler(order, cooler) {\r\n  let res =  await db.collection(databaseName).doc(cooler).set({status: order})\r\n  //Get customer id from order\r\n  //Increment number in coolers tag of customer\r\n}\r\n\r\n//TODO update customer tags -- decrease by one\r\n//Update the given cooler id to inventory\r\nasync function updateInboundCooler(cooler) {\r\n  //Get order number assosciated with cooler\r\n  //Get customer id from order\r\n  let res =  await db.collection(databaseName).doc(cooler).set({status: 'inventory'})\r\n  //Decrease number in coolers tag of customer\r\n}\r\n\r\n//Instantiates the page to assosciate the order to cooler\r\n function OutboundPage(props) {\r\n   //States to represent the current value of the order and the cooler\r\n  const [orderNum, setOrder] = useState(\"NA\");\r\n  const [coolerNum, setCooler] = useState(\"NA\");\r\n  //States to represent the value held within the input fields\r\n  const [inOValue, setInOValue] = useState('')\r\n  const [inCValue, setInCValue] = useState('')\r\n  //State to represent the error messages if needed (if none, then keep empty)\r\n  const [errorMsg, setError] = useState('')\r\n\r\n  //Handles the changes in the order input field\r\n  //Only stores new order if it is of correct length\r\n  const handleOChange = (e) => {\r\n    let input = e.target.value;\r\n    if (input.length === props.orderLength) {\r\n       setOrder(input);\r\n       setInOValue('');\r\n    } else {\r\n      setInOValue(input);\r\n    }\r\n  }\r\n\r\n  //Handles the changges to the cooler input field\r\n  //Only stores new cooler if it is of correct length\r\n  const handleCChange = (e) => {\r\n    let input = e.target.value;\r\n    if (input.length == props.coolerLength) {\r\n      setCooler(input);\r\n      setInCValue('');\r\n    } else {\r\n      setInCValue(input);\r\n\r\n    }\r\n  }\r\n\r\n  //Handles the submit button's functionality\r\n  //Updates the outgoing cooler then resets the states of the cooler and order\r\n  //Prints error if either are NA\r\n  const handleSubmit = () => {\r\n    if (orderNum !== 'NA' && coolerNum !== 'NA') {\r\n      updateOutboundCooler(orderNum, coolerNum);\r\n      setOrder('NA');\r\n      setCooler('NA');\r\n      setError('');\r\n    } else {\r\n      setError('Order Number and Cooler Number must be selected')\r\n    }\r\n  }\r\n\r\n  //Prints the outgoing page\r\n  return(\r\n    <div className=\"inOutPage\" >\r\n      <form className=\"fieldDiv\">\r\n        <label className=\"scanLabel\">\r\n          Order Number:\r\n          <input value={inOValue} onChange={handleOChange} className=\"inputBox\"/>\r\n        </label>\r\n        <label className=\"scanLabel\">\r\n          Cooler Number:\r\n          <input value={inCValue} onChange={handleCChange} className=\"inputBox\"/>\r\n        </label>\r\n      </form>\r\n      <div className=\"numbersDiv\">\r\n        <h3 style={{color: \"red\"}}>{errorMsg}</h3>\r\n        <h3>Current Order Number: {orderNum}</h3>\r\n        <h3>Current Cooler Number: {coolerNum}</h3>\r\n        <button onClick={handleSubmit}>\r\n          Submit</button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n//Instantiates the page to mark the cooler as picked up\r\nfunction InboundPage(props) {\r\n  //State that represents the value in the input field\r\n  const [inCValue, setInCValue] = useState('');\r\n\r\n  //Handles when cooler field has been changed\r\n  //-- only has an effect if the cooler id's length is the desired one\r\n  const handleChange = (e) => {\r\n    let input = e.target.value;\r\n    if (input.length == props.coolerLength) {\r\n      setInCValue('');\r\n      updateInboundCooler(input);\r\n    } else {\r\n      setInCValue(input);\r\n    }\r\n  }\r\n\r\n  //Prints this page\r\n  return(\r\n    <div>\r\n      <h3 className=\"pageTitle\">Cooler Scanning</h3>\r\n      <form className=\"inOutPage\" >\r\n        <label className=\"scanLabel\">\r\n          Cooler Number:\r\n          <input value={inCValue} onChange={handleChange} className=\"inputBox\"/>\r\n        </label>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nclass MyApp extends App {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state= {inbound: false, outbound: true}\r\n    this.swapBoxes=this.swapBoxes.bind(this);\r\n  }\r\n\r\n  //Swaps which page is being shown, inbound or outbound, based on checkboxes\r\n  swapBoxes() {\r\n    var newOut = !this.state.outbound;\r\n    this.setState({outbound: newOut, inbound: !newOut})\r\n  }\r\n\r\n\r\n  render() {\r\n    const { Component, pageProps } = this.props;\r\n    const config = { apiKey: API_KEY, shopOrigin: Cookies.get('shopOrigin'), forcedRedirect: true}\r\n    return (\r\n      <div className=\"App\">\r\n        <div className=\"checkboxLocation\">\r\n          <h3 className=\"checkBoxInsruction\">Please select scan type:</h3>\r\n          <form className=\"checkboxForm\">\r\n            <label className=\"checkBox\">\r\n              Assigning Cooler\r\n              <input\r\n                name=\"outCool\"\r\n                type=\"checkbox\"\r\n                checked={this.state.outbound}\r\n                onChange={this.swapBoxes}/>\r\n            </label>\r\n            <label className=\"checkBox\">\r\n              Inbound Cooler\r\n              <input\r\n                name=\"inCool\"\r\n                type=\"checkbox\"\r\n                checked={this.state.inbound}\r\n                onChange={this.swapBoxes}/>\r\n            </label>\r\n          </form>\r\n        </div>\r\n        {(this.state.outbound) ?\r\n          <OutboundPage orderLength={7} coolerLength={4} /> :\r\n          <InboundPage coolerLength={4} />}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MyApp;\r\n"]},"metadata":{},"sourceType":"module"}