{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\abouh\\\\OneDrive\\\\Desktop\\\\sampleApp\\\\pages\\\\_app.js\";\nimport App from 'next/app';\nimport './app.css';\nimport Head from 'next/head';\nimport { AppProvider } from '@shopify/polaris';\nimport { Provider } from '@shopify/app-bridge-react';\nimport '@shopify/polaris/dist/styles.css';\nimport translations from '@shopify/polaris/locales/en.json';\nimport React, { useState } from 'react';\nimport Cookies from 'js-cookie';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport * as firebase from 'firebase'; //TODO Update given cooler id to out with the given order number\n//This function should update the Firestore db\n\nfunction updateOutboundCooler(order, cooler) {\n  alert(\"Assigning cooler \" + cooler + \" to \" + order);\n} //TODO update the given cooler id to inventory\n//This dunction should update the FIrstore db\n\n\nfunction updateInboundCooler(cooler) {\n  alert(\"Cooler \" + cooler + \" has been picked up\");\n}\n\nfunction OutboundPage(props) {\n  const {\n    0: orderNum,\n    1: setOrder\n  } = useState(\"NA\");\n  const {\n    0: coolerNum,\n    1: setCooler\n  } = useState(\"NA\");\n  const {\n    0: inOValue,\n    1: setInOValue\n  } = useState('');\n  const {\n    0: inCValue,\n    1: setInCValue\n  } = useState('');\n\n  const handleOChange = e => {\n    let input = e.target.value;\n\n    if (input.length === props.orderLength) {\n      setOrder(input);\n      setInOValue('');\n\n      if (coolerNum != \"NA\") {\n        updateOutboundCooler(input, coolerNum);\n        setCooler(\"NA\");\n        setOrder(\"NA\");\n      }\n    } else {\n      setInOValue(input);\n    }\n  };\n\n  const handleCChange = e => {\n    let input = e.target.value;\n\n    if (input.length == props.coolerLength) {\n      setCooler(input);\n      setInCValue('');\n\n      if (orderNum != \"NA\") {\n        updateOutboundCooler(orderNum, input);\n        setCooler(\"NA\");\n        setOrder(\"NA\");\n      }\n    } else {\n      setInCValue(input);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"scanLabel\",\n        children: [\"Order Number:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          value: inOValue,\n          onChange: handleOChange,\n          className: \"inputBox\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"scanLabel\",\n        children: [\"Cooler Number:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          value: inCValue,\n          onChange: handleCChange,\n          className: \"inputBox\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n\nfunction InboundPage(props) {\n  const {\n    0: inCValue,\n    1: setInCValue\n  } = useState('');\n\n  const handleChange = e => {\n    let input = e.target.value;\n\n    if (input.length == props.coolerLength) {\n      setInCValue('');\n      updateInboundCooler(input);\n    } else {\n      setInCValue(input);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"scanLabel\",\n      children: [\"Cooler Number:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        value: inCValue,\n        onChange: handleChange,\n        className: \"inputBox\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n}\n\nclass MyApp extends App {\n  constructor(props) {\n    super(props);\n    this.state = {\n      inbound: false,\n      outbound: true\n    };\n    this.swapBoxes = this.swapBoxes.bind(this);\n  }\n\n  swapBoxes() {\n    var newOut = !this.state.outbound;\n    this.setState({\n      outbound: newOut,\n      inbound: !newOut\n    });\n  }\n\n  render() {\n    const {\n      Component,\n      pageProps\n    } = this.props;\n    const config = {\n      apiKey: API_KEY,\n      shopOrigin: Cookies.get('shopOrigin'),\n      forcedRedirect: true\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"pageTitle\",\n        children: \"Cooler Scanning\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"checkboxLocation\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"checkBoxInsruction\",\n          children: \"Please select scan type:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"checkboxForm\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"checkBox\",\n            children: [\"Assigning Cooler\", /*#__PURE__*/_jsxDEV(\"input\", {\n              name: \"outCool\",\n              type: \"checkbox\",\n              checked: this.state.outbound,\n              onChange: this.swapBoxes\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"checkBox\",\n            children: [\"Inbound Cooler\", /*#__PURE__*/_jsxDEV(\"input\", {\n              name: \"inCool\",\n              type: \"checkbox\",\n              checked: this.state.inbound,\n              onChange: this.swapBoxes\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), this.state.outbound ? /*#__PURE__*/_jsxDEV(OutboundPage, {\n        orderLength: 7,\n        coolerLength: 4\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(InboundPage, {\n        coolerLength: 4\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default MyApp;","map":{"version":3,"sources":["C:/Users/abouh/OneDrive/Desktop/sampleApp/pages/_app.js"],"names":["App","Head","AppProvider","Provider","translations","React","useState","Cookies","Checkbox","FormGroup","FormControlLabel","firebase","updateOutboundCooler","order","cooler","alert","updateInboundCooler","OutboundPage","props","orderNum","setOrder","coolerNum","setCooler","inOValue","setInOValue","inCValue","setInCValue","handleOChange","e","input","target","value","length","orderLength","handleCChange","coolerLength","InboundPage","handleChange","MyApp","constructor","state","inbound","outbound","swapBoxes","bind","newOut","setState","render","Component","pageProps","config","apiKey","API_KEY","shopOrigin","get","forcedRedirect"],"mappings":";;AAAA,OAAOA,GAAP,MAAgB,UAAhB;AACA,OAAO,WAAP;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,QAAT,QAAyB,2BAAzB;AACA,OAAO,kCAAP;AACA,OAAOC,YAAP,MAAyB,kCAAzB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAO,KAAKC,QAAZ,MAA0B,UAA1B,C,CAEA;AACA;;AACA,SAASC,oBAAT,CAA8BC,KAA9B,EAAqCC,MAArC,EAA6C;AAC3CC,EAAAA,KAAK,CAAC,sBAAuBD,MAAvB,GAAgC,MAAhC,GAAyCD,KAA1C,CAAL;AACD,C,CAED;AACA;;;AACA,SAASG,mBAAT,CAA6BF,MAA7B,EAAqC;AACnCC,EAAAA,KAAK,CAAC,YAAYD,MAAZ,GAAqB,qBAAtB,CAAL;AACD;;AAEA,SAASG,YAAT,CAAsBC,KAAtB,EAA6B;AAC5B,QAAM;AAAA,OAACC,QAAD;AAAA,OAAWC;AAAX,MAAuBd,QAAQ,CAAC,IAAD,CAArC;AACA,QAAM;AAAA,OAACe,SAAD;AAAA,OAAYC;AAAZ,MAAyBhB,QAAQ,CAAC,IAAD,CAAvC;AACA,QAAM;AAAA,OAACiB,QAAD;AAAA,OAAWC;AAAX,MAA0BlB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM;AAAA,OAACmB,QAAD;AAAA,OAAWC;AAAX,MAA0BpB,QAAQ,CAAC,EAAD,CAAxC;;AAEA,QAAMqB,aAAa,GAAIC,CAAD,IAAO;AAC3B,QAAIC,KAAK,GAAGD,CAAC,CAACE,MAAF,CAASC,KAArB;;AACA,QAAIF,KAAK,CAACG,MAAN,KAAiBd,KAAK,CAACe,WAA3B,EAAwC;AACrCb,MAAAA,QAAQ,CAACS,KAAD,CAAR;AACAL,MAAAA,WAAW,CAAC,EAAD,CAAX;;AACD,UAAIH,SAAS,IAAI,IAAjB,EAAuB;AACrBT,QAAAA,oBAAoB,CAACiB,KAAD,EAAQR,SAAR,CAApB;AACAC,QAAAA,SAAS,CAAC,IAAD,CAAT;AACAF,QAAAA,QAAQ,CAAC,IAAD,CAAR;AACD;AACF,KARD,MAQO;AACLI,MAAAA,WAAW,CAACK,KAAD,CAAX;AACD;AACF,GAbD;;AAeA,QAAMK,aAAa,GAAIN,CAAD,IAAO;AAC3B,QAAIC,KAAK,GAAGD,CAAC,CAACE,MAAF,CAASC,KAArB;;AACA,QAAIF,KAAK,CAACG,MAAN,IAAgBd,KAAK,CAACiB,YAA1B,EAAwC;AACtCb,MAAAA,SAAS,CAACO,KAAD,CAAT;AACAH,MAAAA,WAAW,CAAC,EAAD,CAAX;;AACA,UAAIP,QAAQ,IAAI,IAAhB,EAAsB;AACpBP,QAAAA,oBAAoB,CAACO,QAAD,EAAWU,KAAX,CAApB;AACAP,QAAAA,SAAS,CAAC,IAAD,CAAT;AACAF,QAAAA,QAAQ,CAAC,IAAD,CAAR;AACD;AACF,KARD,MAQO;AACLM,MAAAA,WAAW,CAACG,KAAD,CAAX;AACD;AACF,GAbD;;AAeA,sBACE;AAAA,2BACE;AAAA,8BACE;AAAO,QAAA,SAAS,EAAC,WAAjB;AAAA,iDAEE;AAAO,UAAA,KAAK,EAAEN,QAAd;AAAwB,UAAA,QAAQ,EAAEI,aAAlC;AAAiD,UAAA,SAAS,EAAC;AAA3D;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAO,QAAA,SAAS,EAAC,WAAjB;AAAA,kDAEE;AAAO,UAAA,KAAK,EAAEF,QAAd;AAAwB,UAAA,QAAQ,EAAES,aAAlC;AAAiD,UAAA,SAAS,EAAC;AAA3D;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;AAED,SAASE,WAAT,CAAqBlB,KAArB,EAA4B;AAC1B,QAAM;AAAA,OAACO,QAAD;AAAA,OAAWC;AAAX,MAA0BpB,QAAQ,CAAC,EAAD,CAAxC;;AAEA,QAAM+B,YAAY,GAAIT,CAAD,IAAO;AAC1B,QAAIC,KAAK,GAAGD,CAAC,CAACE,MAAF,CAASC,KAArB;;AACA,QAAIF,KAAK,CAACG,MAAN,IAAgBd,KAAK,CAACiB,YAA1B,EAAwC;AACtCT,MAAAA,WAAW,CAAC,EAAD,CAAX;AACAV,MAAAA,mBAAmB,CAACa,KAAD,CAAnB;AACD,KAHD,MAGO;AACLH,MAAAA,WAAW,CAACG,KAAD,CAAX;AACD;AACF,GARD;;AAUA,sBACE;AAAA,2BACE;AAAO,MAAA,SAAS,EAAC,WAAjB;AAAA,gDAEE;AAAO,QAAA,KAAK,EAAEJ,QAAd;AAAwB,QAAA,QAAQ,EAAEY,YAAlC;AAAgD,QAAA,SAAS,EAAC;AAA1D;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;AAGD,MAAMC,KAAN,SAAoBtC,GAApB,CAAwB;AACtBuC,EAAAA,WAAW,CAACrB,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKsB,KAAL,GAAY;AAACC,MAAAA,OAAO,EAAE,KAAV;AAAiBC,MAAAA,QAAQ,EAAE;AAA3B,KAAZ;AACA,SAAKC,SAAL,GAAe,KAAKA,SAAL,CAAeC,IAAf,CAAoB,IAApB,CAAf;AACD;;AAEDD,EAAAA,SAAS,GAAG;AACV,QAAIE,MAAM,GAAG,CAAC,KAAKL,KAAL,CAAWE,QAAzB;AACA,SAAKI,QAAL,CAAc;AAACJ,MAAAA,QAAQ,EAAEG,MAAX;AAAmBJ,MAAAA,OAAO,EAAE,CAACI;AAA7B,KAAd;AACD;;AAEDE,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,SAAF;AAAaC,MAAAA;AAAb,QAA2B,KAAK/B,KAAtC;AACA,UAAMgC,MAAM,GAAG;AAAEC,MAAAA,MAAM,EAAEC,OAAV;AAAmBC,MAAAA,UAAU,EAAE9C,OAAO,CAAC+C,GAAR,CAAY,YAAZ,CAA/B;AAA0DC,MAAAA,cAAc,EAAE;AAA1E,KAAf;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,gCACE;AAAI,UAAA,SAAS,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAM,UAAA,SAAS,EAAC,cAAhB;AAAA,kCACE;AAAO,YAAA,SAAS,EAAC,UAAjB;AAAA,wDAEE;AACE,cAAA,IAAI,EAAC,SADP;AAEE,cAAA,IAAI,EAAC,UAFP;AAGE,cAAA,OAAO,EAAE,KAAKf,KAAL,CAAWE,QAHtB;AAIE,cAAA,QAAQ,EAAE,KAAKC;AAJjB;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eASE;AAAO,YAAA,SAAS,EAAC,UAAjB;AAAA,sDAEE;AACE,cAAA,IAAI,EAAC,QADP;AAEE,cAAA,IAAI,EAAC,UAFP;AAGE,cAAA,OAAO,EAAE,KAAKH,KAAL,CAAWC,OAHtB;AAIE,cAAA,QAAQ,EAAE,KAAKE;AAJjB;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBATF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,EAuBI,KAAKH,KAAL,CAAWE,QAAZ,gBACC,QAAC,YAAD;AAAc,QAAA,WAAW,EAAE,CAA3B;AAA8B,QAAA,YAAY,EAAE;AAA5C;AAAA;AAAA;AAAA;AAAA,cADD,gBAEC,QAAC,WAAD;AAAa,QAAA,YAAY,EAAE;AAA3B;AAAA;AAAA;AAAA;AAAA,cAzBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AA6BD;;AA5CqB;;AA+CxB,eAAeJ,KAAf","sourcesContent":["import App from 'next/app';\r\nimport './app.css';\r\nimport Head from 'next/head';\r\nimport { AppProvider } from '@shopify/polaris';\r\nimport { Provider } from '@shopify/app-bridge-react'\r\nimport '@shopify/polaris/dist/styles.css';\r\nimport translations from '@shopify/polaris/locales/en.json';\r\nimport React, { useState } from 'react';\r\nimport Cookies from 'js-cookie';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport * as firebase from 'firebase';\r\n\r\n//TODO Update given cooler id to out with the given order number\r\n//This function should update the Firestore db\r\nfunction updateOutboundCooler(order, cooler) {\r\n  alert(\"Assigning cooler \" +  cooler + \" to \" + order);\r\n}\r\n\r\n//TODO update the given cooler id to inventory\r\n//This dunction should update the FIrstore db\r\nfunction updateInboundCooler(cooler) {\r\n  alert(\"Cooler \" + cooler + \" has been picked up\")\r\n}\r\n\r\n function OutboundPage(props) {\r\n  const [orderNum, setOrder] = useState(\"NA\");\r\n  const [coolerNum, setCooler] = useState(\"NA\");\r\n  const [inOValue, setInOValue] = useState('')\r\n  const [inCValue, setInCValue] = useState('')\r\n\r\n  const handleOChange = (e) => {\r\n    let input = e.target.value;\r\n    if (input.length === props.orderLength) {\r\n       setOrder(input);\r\n       setInOValue('');\r\n      if (coolerNum != \"NA\") {\r\n        updateOutboundCooler(input, coolerNum)\r\n        setCooler(\"NA\");\r\n        setOrder(\"NA\")\r\n      }\r\n    } else {\r\n      setInOValue(input);\r\n    }\r\n  }\r\n\r\n  const handleCChange = (e) => {\r\n    let input = e.target.value;\r\n    if (input.length == props.coolerLength) {\r\n      setCooler(input);\r\n      setInCValue('');\r\n      if (orderNum != \"NA\") {\r\n        updateOutboundCooler(orderNum, input)\r\n        setCooler(\"NA\");\r\n        setOrder(\"NA\")\r\n      }\r\n    } else {\r\n      setInCValue(input);\r\n    }\r\n  }\r\n\r\n  return(\r\n    <div>\r\n      <form>\r\n        <label className=\"scanLabel\">\r\n          Order Number:\r\n          <input value={inOValue} onChange={handleOChange} className=\"inputBox\"/>\r\n        </label>\r\n        <label className=\"scanLabel\">\r\n          Cooler Number:\r\n          <input value={inCValue} onChange={handleCChange} className=\"inputBox\"/>\r\n        </label>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction InboundPage(props) {\r\n  const [inCValue, setInCValue] = useState('');\r\n\r\n  const handleChange = (e) => {\r\n    let input = e.target.value;\r\n    if (input.length == props.coolerLength) {\r\n      setInCValue('');\r\n      updateInboundCooler(input);\r\n    } else {\r\n      setInCValue(input);\r\n    }\r\n  }\r\n\r\n  return(\r\n    <form>\r\n      <label className=\"scanLabel\">\r\n        Cooler Number:\r\n        <input value={inCValue} onChange={handleChange} className=\"inputBox\"/>\r\n      </label>\r\n    </form>\r\n  )\r\n}\r\n\r\n\r\nclass MyApp extends App {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state= {inbound: false, outbound: true}\r\n    this.swapBoxes=this.swapBoxes.bind(this);\r\n  }\r\n\r\n  swapBoxes() {\r\n    var newOut = !this.state.outbound;\r\n    this.setState({outbound: newOut, inbound: !newOut})\r\n  }\r\n\r\n  render() {\r\n    const { Component, pageProps } = this.props;\r\n    const config = { apiKey: API_KEY, shopOrigin: Cookies.get('shopOrigin'), forcedRedirect: true}\r\n    return (\r\n      <div className=\"App\">\r\n        <h3 className=\"pageTitle\">Cooler Scanning</h3>\r\n        <div className=\"checkboxLocation\">\r\n          <h3 className=\"checkBoxInsruction\">Please select scan type:</h3>\r\n          <form className=\"checkboxForm\">\r\n            <label className=\"checkBox\">\r\n              Assigning Cooler\r\n              <input\r\n                name=\"outCool\"\r\n                type=\"checkbox\"\r\n                checked={this.state.outbound}\r\n                onChange={this.swapBoxes}/>\r\n            </label>\r\n            <label className=\"checkBox\">\r\n              Inbound Cooler\r\n              <input\r\n                name=\"inCool\"\r\n                type=\"checkbox\"\r\n                checked={this.state.inbound}\r\n                onChange={this.swapBoxes}/>\r\n            </label>\r\n          </form>\r\n        </div>\r\n        {(this.state.outbound) ?\r\n          <OutboundPage orderLength={7} coolerLength={4} /> :\r\n          <InboundPage coolerLength={4}/>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MyApp;\r\n"]},"metadata":{},"sourceType":"module"}