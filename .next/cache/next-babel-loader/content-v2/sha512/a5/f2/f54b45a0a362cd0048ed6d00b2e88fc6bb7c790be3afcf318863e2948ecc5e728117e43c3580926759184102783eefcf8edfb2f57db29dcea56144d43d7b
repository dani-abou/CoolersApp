{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\abouh\\\\OneDrive\\\\Desktop\\\\sampleApp\\\\pages\\\\_app.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport App from 'next/app';\nimport './app.css';\nimport Head from 'next/head';\nimport { AppProvider } from '@shopify/polaris';\nimport { Provider } from '@shopify/app-bridge-react';\nimport '@shopify/polaris/dist/styles.css';\nimport translations from '@shopify/polaris/locales/en.json';\nimport React, { useState } from 'react';\nimport Cookies from 'js-cookie';\nimport db from './firebase.js';\nimport 'firebase/firestore';\nimport \"firebase/auth\";\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport 'react-tabs/style/react-tabs.css'; //The name of the collection of the cooler database\n//Kept globally so it's easily changeable\n\nvar databaseName = 'cooler-tracking'; //TODO update customer tags -- increase by one\n//Update cooler with given id to out with the given order number\n\nfunction updateOutboundCooler(_x, _x2, _x3) {\n  return _updateOutboundCooler.apply(this, arguments);\n} //TODO update customer tags -- decrease by one\n//Update the given cooler id to inventory\n\n\nfunction _updateOutboundCooler() {\n  _updateOutboundCooler = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(order, cooler, employeeNo) {\n    var ref, res, res2;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            ref = db.collection(databaseName).doc(cooler);\n            res = ref.set({\n              status: order\n            });\n            res2 = ref.set({\n              employee: employeeNo\n            }); //Get customer id from order\n            //Increment number in coolers tag of customer\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _updateOutboundCooler.apply(this, arguments);\n}\n\nfunction updateInboundCooler(_x4) {\n  return _updateInboundCooler.apply(this, arguments);\n} //Instantiates the page to assosciate the order to cooler\n\n\nfunction _updateInboundCooler() {\n  _updateInboundCooler = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(coolers) {\n    var batch, res;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            batch = db.batch();\n            coolers.map(function (id) {\n              var currentRef = db.collection(databaseName).doc(id);\n              batch.set(currentRef, {\n                status: 'inventory'\n              });\n              batch.update(currentRef, {\n                employee: FieldValue[\"delete\"]()\n              });\n            });\n            _context2.next = 4;\n            return batch.commit();\n\n          case 4:\n            res = _context2.sent;\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _updateInboundCooler.apply(this, arguments);\n}\n\nfunction OutboundPage(props) {\n  _s();\n\n  //States to represent the current value of the order and the cooler\n  var _useState = useState(\"NA\"),\n      employeeNum = _useState[0],\n      setEmployee = _useState[1];\n\n  var _useState2 = useState(\"NA\"),\n      orderNum = _useState2[0],\n      setOrder = _useState2[1];\n\n  var _useState3 = useState(\"NA\"),\n      coolerNum = _useState3[0],\n      setCooler = _useState3[1]; //States to represent the value held within the input fields\n\n\n  var _useState4 = useState(''),\n      inEValue = _useState4[0],\n      setInEValue = _useState4[1];\n\n  var _useState5 = useState(''),\n      inOValue = _useState5[0],\n      setInOValue = _useState5[1];\n\n  var _useState6 = useState(''),\n      inCValue = _useState6[0],\n      setInCValue = _useState6[1]; //State to represent the error messages if needed (if none, then keep empty)\n\n\n  var _useState7 = useState(''),\n      errorMsg = _useState7[0],\n      setError = _useState7[1]; //Refs to each of the fields so to trade off focuses\n\n\n  var eNumberField = /*#__PURE__*/React.createRef();\n  var oNumberField = /*#__PURE__*/React.createRef();\n  var cNumberField = /*#__PURE__*/React.createRef(); //Handles the changes in the order input field\n  //Only stores new order if it is of correct length\n\n  var handleOChange = function handleOChange(e) {\n    var input = e.target.value;\n\n    if (input.length === props.orderLength) {\n      setOrder(input);\n      setInOValue('');\n      cNumberField.current.focus();\n    } else {\n      setInOValue(input);\n    }\n  }; //Handles the changges to the cooler input field\n  //Only stores new cooler if it is of correct length\n\n\n  var handleCChange = function handleCChange(e) {\n    var input = e.target.value;\n\n    if (input.length == props.coolerLength) {\n      setCooler(input);\n      setInCValue('');\n      eNumberField.current.focus();\n    } else {\n      setInCValue(input);\n    }\n  }; //Handles the changges to the cooler input field\n  //Only stores new cooler if it is of correct length\n\n\n  var handleEChange = function handleEChange(e) {\n    var input = e.target.value;\n\n    if (input.length == props.employeeLength) {\n      setEmployee(input);\n      setInEValue('');\n      oNumberField.current.focus();\n    } else {\n      setInEValue(input);\n    }\n  }; //Handles the submit button's functionality\n  //Updates the outgoing cooler then resets the states of the cooler and order\n  //Prints error if either are NA\n\n\n  var handleSubmit = function handleSubmit() {\n    if (orderNum !== 'NA' && coolerNum !== 'NA' && employeeNum !== 'NA') {\n      updateOutboundCooler(orderNum, coolerNum, employeeNum);\n      setOrder('NA');\n      setCooler('NA');\n      setEmployee('NA');\n      setError('');\n      oNumberField.current.focus();\n    } else {\n      setError('Need to have an employee number, order number, and cooler number');\n    }\n  }; //Prints the outgoing page\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"inOutPage\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"pageTitle\",\n      children: \"Cooler Scanning\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"fieldDiv\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"scanLabel\",\n        children: [\"Employee Number:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          value: inEValue,\n          onChange: handleEChange,\n          className: \"inputBox\",\n          ref: eNumberField\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"scanLabel\",\n        children: [\"Order Number:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          value: inOValue,\n          onChange: handleOChange,\n          className: \"inputBox\",\n          ref: oNumberField\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"scanLabel\",\n        children: [\"Cooler Number:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          value: inCValue,\n          onChange: handleCChange,\n          className: \"inputBox\",\n          ref: cNumberField\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"numbersDiv\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          color: \"red\"\n        },\n        children: errorMsg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Employee Order Number: \", employeeNum]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Current Order Number: \", orderNum]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Current Cooler Number: \", coolerNum]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this);\n} //Instantiates the page to mark the cooler as picked up\n\n\n_s(OutboundPage, \"pcouEujh3a0nFgOqeQmHJG2W5Xg=\");\n\n_c = OutboundPage;\n\nfunction InboundPage(props) {\n  _s2();\n\n  //State that represents the value in the input field\n  var _useState8 = useState(''),\n      inCValue = _useState8[0],\n      setInCValue = _useState8[1]; //Represents the accumulating list of coolers to be updated\n\n\n  var _useState9 = useState([]),\n      coolers = _useState9[0],\n      setCoolers = _useState9[1]; //Handles when cooler field has been changed\n  //-- only has an effect if the cooler id's length is the desired one\n\n\n  var handleChange = function handleChange(e) {\n    var input = e.target.value;\n\n    if (input.length == props.coolerLength) {\n      setInCValue('');\n\n      if (!coolers.includes(input)) {\n        setCoolers([].concat(_toConsumableArray(coolers), [input]));\n      }\n    } else {\n      setInCValue(input);\n    }\n  };\n\n  var handleInSubmit = function handleInSubmit() {\n    updateInboundCooler(coolers);\n    setCoolers([]);\n  };\n\n  var preventEnterSubmit = function preventEnterSubmit(e) {\n    alert(here);\n    e.preventDefault();\n  }; //Prints this page\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"pageTitle\",\n      children: \"Cooler Scanning\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"inOutPage\",\n      onSubmit: function onSubmit(e) {\n        e.preventDefault();\n      },\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"scanLabel\",\n        children: [\"Cooler Number:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          value: inCValue,\n          onChange: handleChange,\n          className: \"inputBox\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"subSectionIn\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"numOfCools\",\n        children: [\"There are \", coolers.length, \" coolers in this batch\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"inSubmitButton\",\n        onClick: handleInSubmit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 203,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(InboundPage, \"uBUtAGyW2fNVZJlzMxNd8UJXWlc=\");\n\n_c2 = InboundPage;\n\nvar MyApp = /*#__PURE__*/function (_App) {\n  _inherits(MyApp, _App);\n\n  var _super = _createSuper(MyApp);\n\n  function MyApp(props) {\n    _classCallCheck(this, MyApp);\n\n    return _super.call(this, props);\n  }\n\n  _createClass(MyApp, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          Component = _this$props.Component,\n          pageProps = _this$props.pageProps;\n      var config = {\n        apiKey: API_KEY,\n        shopOrigin: Cookies.get('shopOrigin'),\n        forcedRedirect: true\n      };\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: /*#__PURE__*/_jsxDEV(Tabs, {\n          children: [/*#__PURE__*/_jsxDEV(TabList, {\n            children: [/*#__PURE__*/_jsxDEV(Tab, {\n              children: \"Assigning Cooler\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Tab, {\n              children: \"Inbound Cooler\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n            children: /*#__PURE__*/_jsxDEV(OutboundPage, {\n              employeeLength: 3,\n              orderLength: 7,\n              coolerLength: 4\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n            children: /*#__PURE__*/_jsxDEV(InboundPage, {\n              coolerLength: 4\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 7\n      }, this);\n    }\n  }]);\n\n  return MyApp;\n}(App);\n\nexport default MyApp;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"OutboundPage\");\n$RefreshReg$(_c2, \"InboundPage\");","map":{"version":3,"sources":["C:/Users/abouh/OneDrive/Desktop/sampleApp/pages/_app.js"],"names":["App","Head","AppProvider","Provider","translations","React","useState","Cookies","db","Tab","Tabs","TabList","TabPanel","databaseName","updateOutboundCooler","order","cooler","employeeNo","ref","collection","doc","res","set","status","res2","employee","updateInboundCooler","coolers","batch","map","id","currentRef","update","FieldValue","commit","OutboundPage","props","employeeNum","setEmployee","orderNum","setOrder","coolerNum","setCooler","inEValue","setInEValue","inOValue","setInOValue","inCValue","setInCValue","errorMsg","setError","eNumberField","createRef","oNumberField","cNumberField","handleOChange","e","input","target","value","length","orderLength","current","focus","handleCChange","coolerLength","handleEChange","employeeLength","handleSubmit","color","InboundPage","setCoolers","handleChange","includes","handleInSubmit","preventEnterSubmit","alert","here","preventDefault","MyApp","Component","pageProps","config","apiKey","API_KEY","shopOrigin","get","forcedRedirect"],"mappings":"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","sourcesContent":["import App from 'next/app';\r\nimport './app.css';\r\nimport Head from 'next/head';\r\nimport { AppProvider } from '@shopify/polaris';\r\nimport { Provider } from '@shopify/app-bridge-react'\r\nimport '@shopify/polaris/dist/styles.css';\r\nimport translations from '@shopify/polaris/locales/en.json';\r\nimport React, { useState } from 'react';\r\nimport Cookies from 'js-cookie';\r\nimport db from './firebase.js';\r\nimport 'firebase/firestore'\r\nimport \"firebase/auth\";\r\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\r\nimport 'react-tabs/style/react-tabs.css'\r\n\r\n\r\n//The name of the collection of the cooler database\r\n//Kept globally so it's easily changeable\r\nconst databaseName = 'cooler-tracking';\r\n\r\n//TODO update customer tags -- increase by one\r\n//Update cooler with given id to out with the given order number\r\nasync function updateOutboundCooler(order, cooler, employeeNo) {\r\n  let ref = db.collection(databaseName).doc(cooler)\r\n  let res = ref.set({status: order});\r\n  let res2 = ref.set({employee: employeeNo});\r\n  //Get customer id from order\r\n  //Increment number in coolers tag of customer\r\n}\r\n\r\n//TODO update customer tags -- decrease by one\r\n//Update the given cooler id to inventory\r\nasync function updateInboundCooler(coolers) {\r\n  const batch = db.batch();\r\n  coolers.map(\r\n    (id) => {\r\n    let currentRef = db.collection(databaseName).doc(id);\r\n    batch.set(currentRef, {status: 'inventory'});\r\n    batch.update(currentRef, {employee: FieldValue.delete()})\r\n  }\r\n  )\r\n\r\n  let res = await batch.commit();\r\n  //\r\n  // //Get order number assosciated with cooler\r\n  // //Get customer id from order\r\n  // let res =  await db.collection(databaseName).doc(cooler).set({status: 'inventory'})\r\n  // //Decrease number in coolers tag of customer\r\n}\r\n\r\n//Instantiates the page to assosciate the order to cooler\r\n function OutboundPage(props) {\r\n   //States to represent the current value of the order and the cooler\r\n  const [employeeNum, setEmployee] = useState(\"NA\")\r\n  const [orderNum, setOrder] = useState(\"NA\");\r\n  const [coolerNum, setCooler] = useState(\"NA\");\r\n  //States to represent the value held within the input fields\r\n  const [inEValue, setInEValue] = useState('')\r\n  const [inOValue, setInOValue] = useState('')\r\n  const [inCValue, setInCValue] = useState('')\r\n  //State to represent the error messages if needed (if none, then keep empty)\r\n  const [errorMsg, setError] = useState('')\r\n  //Refs to each of the fields so to trade off focuses\r\n  const eNumberField = React.createRef();\r\n  const oNumberField = React.createRef();\r\n  const cNumberField = React.createRef();\r\n\r\n  //Handles the changes in the order input field\r\n  //Only stores new order if it is of correct length\r\n  const handleOChange = (e) => {\r\n    let input = e.target.value;\r\n    if (input.length === props.orderLength) {\r\n       setOrder(input);\r\n       setInOValue('');\r\n       cNumberField.current.focus()\r\n    } else {\r\n      setInOValue(input);\r\n    }\r\n  }\r\n\r\n  //Handles the changges to the cooler input field\r\n  //Only stores new cooler if it is of correct length\r\n  const handleCChange = (e) => {\r\n    let input = e.target.value;\r\n    if (input.length == props.coolerLength) {\r\n      setCooler(input);\r\n      setInCValue('');\r\n      eNumberField.current.focus();\r\n    } else {\r\n      setInCValue(input);\r\n\r\n    }\r\n  }\r\n\r\n  //Handles the changges to the cooler input field\r\n  //Only stores new cooler if it is of correct length\r\n  const handleEChange = (e) => {\r\n    let input = e.target.value;\r\n    if (input.length == props.employeeLength) {\r\n      setEmployee(input);\r\n      setInEValue('');\r\n      oNumberField.current.focus();\r\n    } else {\r\n      setInEValue(input);\r\n    }\r\n  }\r\n\r\n  //Handles the submit button's functionality\r\n  //Updates the outgoing cooler then resets the states of the cooler and order\r\n  //Prints error if either are NA\r\n  const handleSubmit = () => {\r\n    if (orderNum !== 'NA' && coolerNum !== 'NA' && employeeNum !== 'NA') {\r\n      updateOutboundCooler(orderNum, coolerNum, employeeNum);\r\n      setOrder('NA');\r\n      setCooler('NA');\r\n      setEmployee('NA');\r\n      setError('');\r\n      oNumberField.current.focus();\r\n    } else {\r\n      setError('Need to have an employee number, order number, and cooler number')\r\n    }\r\n  }\r\n\r\n  //Prints the outgoing page\r\n  return(\r\n    <div className=\"inOutPage\" >\r\n      <h3 className=\"pageTitle\">Cooler Scanning</h3>\r\n      <form className=\"fieldDiv\">\r\n        <label className=\"scanLabel\">\r\n          Employee Number:\r\n          <input\r\n            value={inEValue}\r\n            onChange={handleEChange}\r\n            className=\"inputBox\"\r\n            ref = {eNumberField}\r\n            />\r\n        </label>\r\n        <label className=\"scanLabel\">\r\n          Order Number:\r\n          <input\r\n            value={inOValue}\r\n            onChange={handleOChange}\r\n            className=\"inputBox\"\r\n            ref = {oNumberField}\r\n            />\r\n        </label>\r\n        <label className=\"scanLabel\">\r\n          Cooler Number:\r\n          <input\r\n            value={inCValue}\r\n            onChange={handleCChange}\r\n            className=\"inputBox\"\r\n            ref = {cNumberField}\r\n            />\r\n        </label>\r\n      </form>\r\n      <div className=\"numbersDiv\">\r\n        <h3 style={{color: \"red\"}}>{errorMsg}</h3>\r\n        <h3>Employee Order Number: {employeeNum}</h3>\r\n        <h3>Current Order Number: {orderNum}</h3>\r\n        <h3>Current Cooler Number: {coolerNum}</h3>\r\n        <button onClick={handleSubmit}>\r\n          Submit</button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n//Instantiates the page to mark the cooler as picked up\r\nfunction InboundPage(props) {\r\n  //State that represents the value in the input field\r\n  const [inCValue, setInCValue] = useState('');\r\n  //Represents the accumulating list of coolers to be updated\r\n  const [coolers, setCoolers] = useState([]);\r\n\r\n  //Handles when cooler field has been changed\r\n  //-- only has an effect if the cooler id's length is the desired one\r\n  const handleChange = (e) => {\r\n    let input = e.target.value;\r\n    if (input.length == props.coolerLength) {\r\n      setInCValue('');\r\n      if (!coolers.includes(input)){\r\n        setCoolers([...coolers, input]);\r\n      }\r\n    } else {\r\n      setInCValue(input);\r\n    }\r\n  }\r\n\r\n  const handleInSubmit = () => {\r\n    updateInboundCooler(coolers);\r\n    setCoolers([]);\r\n  }\r\n\r\n  const preventEnterSubmit = (e) => {\r\n    alert(here)\r\n    e.preventDefault()\r\n  }\r\n\r\n\r\n  //Prints this page\r\n  return(\r\n    <div>\r\n      <h3 className=\"pageTitle\">Cooler Scanning</h3>\r\n      <form className=\"inOutPage\" onSubmit={e => {e.preventDefault();}}>\r\n        <label className=\"scanLabel\">\r\n          Cooler Number:\r\n          <input value={inCValue} onChange={handleChange} className=\"inputBox\"/>\r\n        </label>\r\n      </form>\r\n      <div className=\"subSectionIn\">\r\n        <h3 className = \"numOfCools\">\r\n          There are {coolers.length} coolers in this batch</h3>\r\n        <button type =\"button\" className = \"inSubmitButton\"\r\n            onClick={handleInSubmit}>Submit</button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nclass MyApp extends App {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    const { Component, pageProps } = this.props;\r\n    const config = { apiKey: API_KEY, shopOrigin: Cookies.get('shopOrigin'), forcedRedirect: true}\r\n    return (\r\n      <div className=\"App\">\r\n        <Tabs>\r\n          <TabList>\r\n            <Tab>Assigning Cooler</Tab>\r\n            <Tab>Inbound Cooler</Tab>\r\n          </TabList>\r\n          <TabPanel>\r\n            <OutboundPage employeeLength={3} orderLength={7} coolerLength={4} />\r\n          </TabPanel>\r\n          <TabPanel>\r\n              <InboundPage coolerLength={4} />\r\n          </TabPanel>\r\n        </Tabs>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MyApp;\r\n"]},"metadata":{},"sourceType":"module"}