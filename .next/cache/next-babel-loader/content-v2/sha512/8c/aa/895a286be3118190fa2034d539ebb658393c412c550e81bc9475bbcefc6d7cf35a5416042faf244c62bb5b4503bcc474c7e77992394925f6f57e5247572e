{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\abouh\\\\OneDrive\\\\Desktop\\\\sampleApp\\\\pages\\\\_app.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport App from 'next/app';\nimport './app.css';\nimport Head from 'next/head';\nimport { AppProvider } from '@shopify/polaris';\nimport { Provider } from '@shopify/app-bridge-react';\nimport '@shopify/polaris/dist/styles.css';\nimport translations from '@shopify/polaris/locales/en.json';\nimport React, { useState } from 'react';\nimport Cookies from 'js-cookie';\nimport db from './firebase.js';\nimport 'firebase/firestore';\nimport \"firebase/auth\";\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport 'react-tabs/style/react-tabs.css'; //The name of the collection of the cooler database\n//Kept globally so it's easily changeable\n\nvar databaseName = 'cooler-tracking'; //TODO update customer tags -- increase by one\n//Update cooler with given id to out with the given order number\n\nfunction updateOutboundCooler(_x, _x2) {\n  return _updateOutboundCooler.apply(this, arguments);\n} //TODO update customer tags -- decrease by one\n//Update the given cooler id to inventory\n\n\nfunction _updateOutboundCooler() {\n  _updateOutboundCooler = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(order, cooler) {\n    var res;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return db.collection(databaseName).doc(cooler).set({\n              status: order\n            });\n\n          case 2:\n            res = _context.sent;\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _updateOutboundCooler.apply(this, arguments);\n}\n\nfunction updateInboundCooler(_x3) {\n  return _updateInboundCooler.apply(this, arguments);\n} //Instantiates the page to assosciate the order to cooler\n\n\nfunction _updateInboundCooler() {\n  _updateInboundCooler = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(cooler) {\n    var res;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return db.collection(databaseName).doc(cooler).set({\n              status: 'inventory'\n            });\n\n          case 2:\n            res = _context2.sent;\n\n          case 3:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _updateInboundCooler.apply(this, arguments);\n}\n\nfunction OutboundPage(props) {\n  _s();\n\n  //States to represent the current value of the order and the cooler\n  var _useState = useState(\"NA\"),\n      orderNum = _useState[0],\n      setOrder = _useState[1];\n\n  var _useState2 = useState(\"NA\"),\n      coolerNum = _useState2[0],\n      setCooler = _useState2[1]; //States to represent the value held within the input fields\n\n\n  var _useState3 = useState(''),\n      inOValue = _useState3[0],\n      setInOValue = _useState3[1];\n\n  var _useState4 = useState(''),\n      inCValue = _useState4[0],\n      setInCValue = _useState4[1]; //State to represent the error messages if needed (if none, then keep empty)\n\n\n  var _useState5 = useState(''),\n      errorMsg = _useState5[0],\n      setError = _useState5[1]; //Refs to each of the fields so to trade off focuses\n\n\n  var oNumberField = /*#__PURE__*/React.createRef();\n  var cNumberField = /*#__PURE__*/React.createRef();\n  oNumberField.current.focus(); //Handles the changes in the order input field\n  //Only stores new order if it is of correct length\n\n  var handleOChange = function handleOChange(e) {\n    var input = e.target.value;\n\n    if (input.length === props.orderLength) {\n      setOrder(input);\n      setInOValue('');\n      cNumberField.current.focus();\n    } else {\n      setInOValue(input);\n    }\n  }; //Handles the changges to the cooler input field\n  //Only stores new cooler if it is of correct length\n\n\n  var handleCChange = function handleCChange(e) {\n    var input = e.target.value;\n\n    if (input.length == props.coolerLength) {\n      setCooler(input);\n      setInCValue('');\n      oNumberField.current.focus();\n    } else {\n      setInCValue(input);\n    }\n  }; //Handles the submit button's functionality\n  //Updates the outgoing cooler then resets the states of the cooler and order\n  //Prints error if either are NA\n\n\n  var handleSubmit = function handleSubmit() {\n    if (orderNum !== 'NA' && coolerNum !== 'NA') {\n      updateOutboundCooler(orderNum, coolerNum);\n      setOrder('NA');\n      setCooler('NA');\n      setError('');\n      oNumberField.current.focus();\n    } else {\n      setError('Order Number and Cooler Number must be selected');\n    }\n  }; //Prints the outgoing page\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"inOutPage\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"pageTitle\",\n      children: \"Cooler Scanning\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"fieldDiv\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"scanLabel\",\n        children: [\"Order Number:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          value: inOValue,\n          onChange: handleOChange,\n          className: \"inputBox\",\n          ref: oNumberField\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"scanLabel\",\n        children: [\"Cooler Number:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          value: inCValue,\n          onChange: handleCChange,\n          className: \"inputBox\",\n          ref: cNumberField\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"numbersDiv\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          color: \"red\"\n        },\n        children: errorMsg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Current Order Number: \", orderNum]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Current Cooler Number: \", coolerNum]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n} //Instantiates the page to mark the cooler as picked up\n\n\n_s(OutboundPage, \"8KG/hfpRjvuCJilHjnaz6xiXeTM=\");\n\n_c = OutboundPage;\n\nfunction InboundPage(props) {\n  _s2();\n\n  //State that represents the value in the input field\n  var _useState6 = useState(''),\n      inCValue = _useState6[0],\n      setInCValue = _useState6[1]; //Handles when cooler field has been changed\n  //-- only has an effect if the cooler id's length is the desired one\n\n\n  var handleChange = function handleChange(e) {\n    var input = e.target.value;\n\n    if (input.length == props.coolerLength) {\n      setInCValue('');\n      updateInboundCooler(input);\n    } else {\n      setInCValue(input);\n    }\n  }; //Prints this page\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"pageTitle\",\n      children: \"Cooler Scanning\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"inOutPage\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"scanLabel\",\n        children: [\"Cooler Number:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          value: inCValue,\n          onChange: handleChange,\n          className: \"inputBox\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(InboundPage, \"JOfp23t+rCNlpeYe+UWQL7eXUf8=\");\n\n_c2 = InboundPage;\n\nvar MyApp = /*#__PURE__*/function (_App) {\n  _inherits(MyApp, _App);\n\n  var _super = _createSuper(MyApp);\n\n  function MyApp(props) {\n    var _this;\n\n    _classCallCheck(this, MyApp);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      inbound: false,\n      outbound: true\n    };\n    _this.swapBoxes = _this.swapBoxes.bind(_assertThisInitialized(_this));\n    return _this;\n  } //Swaps which page is being shown, inbound or outbound, based on checkboxes\n\n\n  _createClass(MyApp, [{\n    key: \"swapBoxes\",\n    value: function swapBoxes() {\n      var newOut = !this.state.outbound;\n      this.setState({\n        outbound: newOut,\n        inbound: !newOut\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          Component = _this$props.Component,\n          pageProps = _this$props.pageProps;\n      var config = {\n        apiKey: API_KEY,\n        shopOrigin: Cookies.get('shopOrigin'),\n        forcedRedirect: true\n      };\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: /*#__PURE__*/_jsxDEV(Tabs, {\n          children: [/*#__PURE__*/_jsxDEV(TabList, {\n            children: [/*#__PURE__*/_jsxDEV(Tab, {\n              children: \"Assigning Cooler\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Tab, {\n              children: \"Inbound Cooler\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n            children: /*#__PURE__*/_jsxDEV(OutboundPage, {\n              orderLength: 7,\n              coolerLength: 4\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n            children: /*#__PURE__*/_jsxDEV(InboundPage, {\n              coolerLength: 4\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 11\n      }, this);\n    }\n  }]);\n\n  return MyApp;\n}(App); // <div className=\"checkboxLocation\">\n//   <h3 className=\"checkBoxInsruction\">Please select scan type:</h3>\n//   <form className=\"checkboxForm\">\n//     <label className=\"checkBox\">\n//       Assigning Cooler\n//       <input\n//         name=\"outCool\"\n//         type=\"checkbox\"\n//         checked={this.state.outbound}\n//         onChange={this.swapBoxes}/>\n//     </label>\n//     <label className=\"checkBox\">\n//       Inbound Cooler\n//       <input\n//         name=\"inCool\"\n//         type=\"checkbox\"\n//         checked={this.state.inbound}\n//         onChange={this.swapBoxes}/>\n//     </label>\n//   </form>\n// </div>\n// {(this.state.outbound) ?\n//   <OutboundPage orderLength={7} coolerLength={4} /> :\n//   <InboundPage coolerLength={4} />}\n\n\nexport default MyApp;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"OutboundPage\");\n$RefreshReg$(_c2, \"InboundPage\");","map":{"version":3,"sources":["C:/Users/abouh/OneDrive/Desktop/sampleApp/pages/_app.js"],"names":["App","Head","AppProvider","Provider","translations","React","useState","Cookies","db","Tab","Tabs","TabList","TabPanel","databaseName","updateOutboundCooler","order","cooler","collection","doc","set","status","res","updateInboundCooler","OutboundPage","props","orderNum","setOrder","coolerNum","setCooler","inOValue","setInOValue","inCValue","setInCValue","errorMsg","setError","oNumberField","createRef","cNumberField","current","focus","handleOChange","e","input","target","value","length","orderLength","handleCChange","coolerLength","handleSubmit","color","InboundPage","handleChange","MyApp","state","inbound","outbound","swapBoxes","bind","newOut","setState","Component","pageProps","config","apiKey","API_KEY","shopOrigin","get","forcedRedirect"],"mappings":"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","sourcesContent":["import App from 'next/app';\r\nimport './app.css';\r\nimport Head from 'next/head';\r\nimport { AppProvider } from '@shopify/polaris';\r\nimport { Provider } from '@shopify/app-bridge-react'\r\nimport '@shopify/polaris/dist/styles.css';\r\nimport translations from '@shopify/polaris/locales/en.json';\r\nimport React, { useState } from 'react';\r\nimport Cookies from 'js-cookie';\r\nimport db from './firebase.js';\r\nimport 'firebase/firestore'\r\nimport \"firebase/auth\";\r\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\r\nimport 'react-tabs/style/react-tabs.css'\r\n\r\n\r\n//The name of the collection of the cooler database\r\n//Kept globally so it's easily changeable\r\nconst databaseName = 'cooler-tracking';\r\n\r\n//TODO update customer tags -- increase by one\r\n//Update cooler with given id to out with the given order number\r\nasync function updateOutboundCooler(order, cooler) {\r\n  let res =  await db.collection(databaseName).doc(cooler).set({status: order})\r\n  //Get customer id from order\r\n  //Increment number in coolers tag of customer\r\n}\r\n\r\n//TODO update customer tags -- decrease by one\r\n//Update the given cooler id to inventory\r\nasync function updateInboundCooler(cooler) {\r\n  //Get order number assosciated with cooler\r\n  //Get customer id from order\r\n  let res =  await db.collection(databaseName).doc(cooler).set({status: 'inventory'})\r\n  //Decrease number in coolers tag of customer\r\n}\r\n\r\n//Instantiates the page to assosciate the order to cooler\r\n function OutboundPage(props) {\r\n   //States to represent the current value of the order and the cooler\r\n  const [orderNum, setOrder] = useState(\"NA\");\r\n  const [coolerNum, setCooler] = useState(\"NA\");\r\n  //States to represent the value held within the input fields\r\n  const [inOValue, setInOValue] = useState('')\r\n  const [inCValue, setInCValue] = useState('')\r\n  //State to represent the error messages if needed (if none, then keep empty)\r\n  const [errorMsg, setError] = useState('')\r\n  //Refs to each of the fields so to trade off focuses\r\n  const oNumberField = React.createRef();\r\n  const cNumberField = React.createRef();\r\n\r\n  oNumberField.current.focus();\r\n  //Handles the changes in the order input field\r\n  //Only stores new order if it is of correct length\r\n  const handleOChange = (e) => {\r\n    let input = e.target.value;\r\n    if (input.length === props.orderLength) {\r\n       setOrder(input);\r\n       setInOValue('');\r\n       cNumberField.current.focus()\r\n    } else {\r\n      setInOValue(input);\r\n    }\r\n  }\r\n\r\n  //Handles the changges to the cooler input field\r\n  //Only stores new cooler if it is of correct length\r\n  const handleCChange = (e) => {\r\n    let input = e.target.value;\r\n    if (input.length == props.coolerLength) {\r\n      setCooler(input);\r\n      setInCValue('');\r\n      oNumberField.current.focus();\r\n    } else {\r\n      setInCValue(input);\r\n\r\n    }\r\n  }\r\n\r\n  //Handles the submit button's functionality\r\n  //Updates the outgoing cooler then resets the states of the cooler and order\r\n  //Prints error if either are NA\r\n  const handleSubmit = () => {\r\n    if (orderNum !== 'NA' && coolerNum !== 'NA') {\r\n      updateOutboundCooler(orderNum, coolerNum);\r\n      setOrder('NA');\r\n      setCooler('NA');\r\n      setError('');\r\n      oNumberField.current.focus();\r\n    } else {\r\n      setError('Order Number and Cooler Number must be selected')\r\n    }\r\n  }\r\n\r\n  //Prints the outgoing page\r\n  return(\r\n    <div className=\"inOutPage\" >\r\n      <h3 className=\"pageTitle\">Cooler Scanning</h3>\r\n      <form className=\"fieldDiv\">\r\n        <label className=\"scanLabel\">\r\n          Order Number:\r\n          <input\r\n            value={inOValue}\r\n            onChange={handleOChange}\r\n            className=\"inputBox\"\r\n            ref = {oNumberField}\r\n            />\r\n        </label>\r\n        <label className=\"scanLabel\">\r\n          Cooler Number:\r\n          <input\r\n            value={inCValue}\r\n            onChange={handleCChange}\r\n            className=\"inputBox\"\r\n            ref = {cNumberField}\r\n            />\r\n        </label>\r\n      </form>\r\n      <div className=\"numbersDiv\">\r\n        <h3 style={{color: \"red\"}}>{errorMsg}</h3>\r\n        <h3>Current Order Number: {orderNum}</h3>\r\n        <h3>Current Cooler Number: {coolerNum}</h3>\r\n        <button onClick={handleSubmit}>\r\n          Submit</button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n//Instantiates the page to mark the cooler as picked up\r\nfunction InboundPage(props) {\r\n  //State that represents the value in the input field\r\n  const [inCValue, setInCValue] = useState('');\r\n\r\n  //Handles when cooler field has been changed\r\n  //-- only has an effect if the cooler id's length is the desired one\r\n  const handleChange = (e) => {\r\n    let input = e.target.value;\r\n    if (input.length == props.coolerLength) {\r\n      setInCValue('');\r\n      updateInboundCooler(input);\r\n    } else {\r\n      setInCValue(input);\r\n    }\r\n  }\r\n\r\n  //Prints this page\r\n  return(\r\n    <div>\r\n      <h3 className=\"pageTitle\">Cooler Scanning</h3>\r\n      <form className=\"inOutPage\" >\r\n        <label className=\"scanLabel\">\r\n          Cooler Number:\r\n          <input value={inCValue} onChange={handleChange} className=\"inputBox\"/>\r\n        </label>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nclass MyApp extends App {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state= {inbound: false, outbound: true}\r\n    this.swapBoxes=this.swapBoxes.bind(this);\r\n  }\r\n\r\n  //Swaps which page is being shown, inbound or outbound, based on checkboxes\r\n  swapBoxes() {\r\n    var newOut = !this.state.outbound;\r\n    this.setState({outbound: newOut, inbound: !newOut})\r\n  }\r\n\r\n\r\n  render() {\r\n    const { Component, pageProps } = this.props;\r\n    const config = { apiKey: API_KEY, shopOrigin: Cookies.get('shopOrigin'), forcedRedirect: true}\r\n    return (\r\n          <div className=\"App\">\r\n      <Tabs>\r\n        <TabList>\r\n          <Tab>Assigning Cooler</Tab>\r\n          <Tab>Inbound Cooler</Tab>\r\n        </TabList>\r\n        <TabPanel>\r\n          <OutboundPage orderLength={7} coolerLength={4} />\r\n        </TabPanel>\r\n        <TabPanel>\r\n            <InboundPage coolerLength={4} />\r\n        </TabPanel>\r\n      </Tabs>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// <div className=\"checkboxLocation\">\r\n//   <h3 className=\"checkBoxInsruction\">Please select scan type:</h3>\r\n//   <form className=\"checkboxForm\">\r\n//     <label className=\"checkBox\">\r\n//       Assigning Cooler\r\n//       <input\r\n//         name=\"outCool\"\r\n//         type=\"checkbox\"\r\n//         checked={this.state.outbound}\r\n//         onChange={this.swapBoxes}/>\r\n//     </label>\r\n//     <label className=\"checkBox\">\r\n//       Inbound Cooler\r\n//       <input\r\n//         name=\"inCool\"\r\n//         type=\"checkbox\"\r\n//         checked={this.state.inbound}\r\n//         onChange={this.swapBoxes}/>\r\n//     </label>\r\n//   </form>\r\n// </div>\r\n// {(this.state.outbound) ?\r\n//   <OutboundPage orderLength={7} coolerLength={4} /> :\r\n//   <InboundPage coolerLength={4} />}\r\n\r\nexport default MyApp;\r\n"]},"metadata":{},"sourceType":"module"}